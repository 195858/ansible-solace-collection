# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: "Wait until broker service available"
  solace.pubsub_plus.solace_get_available:
    host: "{{ combined_generate.inventory_settings.sempv2_host }}"
    port: "{{ combined_generate.inventory_settings.sempv2_port }}"
    secure_connection: "{{ combined_generate.inventory_settings.sempv2_is_secure_connection }}"
    username: "{{ combined_generate.inventory_settings.sempv2_username }}"
    password: "{{ combined_generate.inventory_settings.sempv2_password }}"
    msg_vpn: "{{ combined_generate.inventory_settings.vpn }}"
  delegate_to: localhost
  register: available_result

- debug:
    msg:
     - "container_name: {{ combined_docker_compose_settings.definition.services[item].container_name }}"
  with_items: "{{ combined_docker_compose_settings.definition.services.keys() | list }}"

- name: "Get docker logs if broker service not available"
  include_tasks: docker_logs.yml
  with_items: "{{ combined_docker_compose_settings.definition.services.keys() | list }}"
  # always, could introduce a docker_logs=always, never, on_error flag as argument
  # when: not available_result.is_available

- name: "Set result"
  block:
  - set_fact:
      _inventory: "{{ lookup('template', 'broker_service.inventory.j2') | from_json}}"
  - set_fact:
      r: r
    register: solace_broker_service_result
  - set_fact:
      solace_broker_service_result:
        broker_service:
          inventory: "{{ _inventory }}"
          docker_compose_settings:
            project_name: "{{ combined_docker_compose_settings.project_name }}"
            services: "{{ combined_docker_compose_settings.services | default(omit) }}"
            definition: "{{ combined_docker_compose_settings.definition }}"
          docker_logs: "{{ combined_docker_logs }}"
  delegate_to: localhost
