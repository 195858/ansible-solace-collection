# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: "Wait until broker service available"
  solace.pubsub_plus.solace_get_available:
    host: "{{ generated_inventory.sempv2_host }}"
    port: "{{ generated_inventory.sempv2_port }}"
    secure_connection: "{{ generated_inventory.sempv2_is_secure_connection }}"
    username: "{{ generated_inventory.sempv2_username }}"
    password: "{{ generated_inventory.sempv2_password }}"
    msg_vpn: "{{ generated_inventory.vpn }}"
    # wait_timeout_minutes: 1 # test failure
  delegate_to: localhost
  register: available_result

- name: "Get docker logs if not available"
  command:
    argv:
      - docker
      - logs
      - "{{ container_name }}"
  when: not available_result.is_available
  register: docker_logs_result
- name: "Show docker logs if failed to start solace broker service"
  debug:
    msg:
      - "failed to start solace broker service"
      - "docker logs {{ container_name}}"
      - "{{ docker_logs_result.stdout_lines if docker_logs_result.stdout_lines is defined else 'no docker logs available'}}"
  when: not available_result.is_available
  failed_when: true

- name: "Generate inventory"
  set_fact:
    inventory: "{{ lookup('template', 'docker_single_node.j2') | from_json}}"
  when: service_type == 'docker_single_node'
  delegate_to: localhost

- name: "Save generated inventory"
  copy:
    content: "{{ inventory | to_nice_yaml(indent=2) }}"
    dest: "{{ generated_inventory_file }}"
  delegate_to: localhost
