# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "Get Information about the broker / service"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace_gather_facts:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ solace_cloud_api_token | default(omit) }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"

  # vars_files:
  #   - "../lib/solace-cloud-service.vars.yml"
  pre_tasks:
  # - include_vars:
  #     file: "env.vars.yml"
  #     name: env

  tasks:

    - name: "Check vars"
      set_fact:
        working_dir: "{{ WORKING_DIR }}"

    - name: Gather Solace Facts
      solace_gather_facts:

    - name: "Save hostvars to {{ working_dir }}/hostvars.yml"
      copy:
        content: "{{ hostvars | to_nice_yaml }}"
        dest: "{{ working_dir }}/hostvars.yml"
      delegate_to: localhost

    - name: "Save hostvars[{{ inventory_hostname }}].ansibl_facts to {{ working_dir }}/hostvars.{{ inventory_hostname }}.ansible_facts.yml"
      copy:
        content: "{{ hostvars[inventory_hostname]['ansible_facts']['solace'] | to_nice_yaml }}"
        dest: "{{ working_dir }}/hostvars.{{ inventory_hostname }}.ansible_facts.yml"
      delegate_to: localhost

    - name: Show ansible_facts.solace
      debug:
        msg:
          - "ansible_facts.solace:"
          - "{{ ansible_facts.solace }}"

    - name: Show Host Server
      debug:
        msg: "server={{ ansible_facts.solace.Server }}"

    - name: Show Host SEMP API Version
      debug:
        msg: "api version={{ ansible_facts.solace.about.api.sempVersion }}"

    - name: Show Host Message VPNs
      debug:
        msg: "msg vpns={{ ansible_facts.solace.about.user.msgVpns }}"

    - name: "Get Host SMF Messaging Endpoints Facts: local"
      solace_get_facts:
        hostvars: "{{ hostvars }}"
        host: "{{ inventory_hostname }}"
        fields:
        field_funcs:
          - get_serviceSMFMessagingEndpoints
      register: local_smf_enpoints_facts
      when: broker_type == "local"

    - name: "Get Host SMF Messaging Endpoints Facts: solace_cloud"
      solace_get_facts:
        hostvars: "{{ hostvars }}"
        host: "{{ inventory_hostname }}"
        fields:
        field_funcs:
          - get_serviceSMFMessagingEndpoints
      register: solace_cloud_smf_enpoints_facts
      when: broker_type == "solace_cloud"

    - name: "Get Host Service Facts: local"
      solace_get_facts:
        hostvars: "{{ hostvars }}"
        host: "{{ inventory_hostname }}"
        fields:
        field_funcs:
          - get_serviceSmfPlainTextListenPort
          - get_serviceSmfCompressionListenPort
          - get_serviceSmfTlsListenPort
          - get_virtualRouterName
      register: local_service_facts
      when: broker_type == "local"

    - name: "Get Host Service Facts: solace_cloud"
      solace_get_facts:
        hostvars: "{{ hostvars }}"
        host: "{{ inventory_hostname }}"
        field_funcs:
          - get_serviceSmfPlainTextListenPort
          - get_serviceSmfCompressionListenPort
          - get_serviceSmfTlsListenPort
          - get_virtualRouterName
      register: solace_cloud_service_facts
      when: broker_type == "solace_cloud"

    - name: "Show Host Service Facts"
      debug:
        msg:
          - "local_service_facts:"
          - "{{ local_service_facts }}"
          - "{{ local_smf_enpoints_facts }}"
          - "solace_cloud_service_facts:"
          - "{{ solace_cloud_service_facts }}"
          - "{{ solace_cloud_smf_enpoints_facts }}"

    - name: "Get Host Bridge Facts: local"
      solace_get_facts:
        hostvars: "{{ hostvars }}"
        host: local_broker
        fields:
        field_funcs:
          - get_bridge_remoteMsgVpnLocations
      register: local_bridge

    - name: "Get Host Bridge Facts: {{sc_service.name}}"
      solace_get_facts:
        hostvars: "{{ hostvars }}"
        host: ansible_solace_test_broker
        fields:
        field_funcs:
          - get_bridge_remoteMsgVpnLocations
      register: solace_cloud_bridge

    - name: Print Host Bridge Facts
      debug:
        msg:
          - "remote host bridge facts: local"
          - "{{ local_bridge.facts }}"
          - "remote host bridge facts: solace_cloud"
          - "{{ solace_cloud_bridge.facts }}"


###
# The End.
