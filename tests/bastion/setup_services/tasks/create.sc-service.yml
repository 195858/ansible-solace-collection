# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

---
- name: Check vars
  assert:
    that:
      - sc_service is defined
      - SOLACE_CLOUD_API_TOKEN is defined
      - output_dir is defined
    fail_msg: "one or more variables not defined"

- set_fact:
    service_output_dir: "{{ output_dir }}/{{ sc_service.name }}"
- file:
    path: "{{ service_output_dir }}"
    state: directory
  delegate_to: localhost

- name: "Create Solace Cloud Service - wait until completed"
  solace_cloud_service:
    api_token: "{{ SOLACE_CLOUD_API_TOKEN }}"
    name: "{{ sc_service.name }}"
    wait_timeout_minutes: 30
    settings:
      msgVpnName: "{{ sc_service.msgVpnName }}"
      datacenterId: "{{ sc_service.datacenterId }}"
      serviceTypeId: "{{ sc_service.serviceTypeId }}"
      serviceClassId: "{{ sc_service.serviceClassId }}"
      attributes: "{{ sc_service.attributes | default(omit) }}"
    state: present
  register: result

- set_fact:
    sc_service_id: "{{ result.response.serviceId }}"
    sc_service_info: "{{ result.response }}"

- name: "Get Solace Cloud Service Inventory"
  solace_cloud_get_facts:
    from_dict: "{{ sc_service_info }}"
    get_remoteFormattedHostInventory:
      remote_host_inventory: "{{ lookup('file', inventory_file) | from_json }}"
      remote_host_inventory_hostname: "{{ inventory_hostname }}"
      host_entry: "{{ sc_service.name }}"
      meta:
        service_name: "{{ sc_service_info.name }}"
        sc_service_id: "{{ sc_service_info.serviceId }}"
        datacenterId: "{{ sc_service_info.datacenterId }}"
        serviceTypeId: "{{ sc_service_info.serviceTypeId}}"
        serviceClassId: "{{ sc_service_info.serviceClassId }}"
        serviceClassDisplayedAttributes: "{{ sc_service_info.serviceClassDisplayedAttributes }}"
    get_formattedHostInventory:
      host_entry: "{{ sc_service.name }}"
      meta:
        service_name: "{{ sc_service_info.name }}"
        sc_service_id: "{{ sc_service_info.serviceId }}"
        datacenterId: "{{ sc_service_info.datacenterId }}"
        serviceTypeId: "{{ sc_service_info.serviceTypeId}}"
        serviceClassId: "{{ sc_service_info.serviceClassId }}"
        serviceClassDisplayedAttributes: "{{ sc_service_info.serviceClassDisplayedAttributes }}"
  register: result
  delegate_to: localhost

- name: "Save Solace Cloud Service Inventories to Config"
  block:
    - copy:
        content: "{{ result.facts.formattedHostInventory | to_nice_yaml(indent=2) }}"
        dest: "{{ service_output_dir }}/broker_service.inventory.yml"
    - copy:
        content: "{{ result.facts.remoteFormattedHostInventory | to_nice_yaml(indent=2) }}"
        dest: "{{ service_output_dir }}/bastion.broker_service.inventory.yml"
  delegate_to: localhost

###
# The End.
