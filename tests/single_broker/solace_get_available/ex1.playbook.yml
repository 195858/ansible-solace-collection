# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "Check/wait until brokers available"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  serial: 1
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace_gather_facts:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_get_available:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"

  tasks:
    - name: "gather facts"
      solace_gather_facts:
    # - debug:
    #     msg: "{{ ansible_facts.solace }}"
    - set_fact:
        sempv2_version: "{{ ansible_facts.solace.about.api.sempVersion }}"

    - name: "Wrong host"
      solace_get_available:
        host: "unknown.host.com"
        wait_timeout_minutes: 1
      register: result
      ignore_errors: true
    - assert:
        that:
          - result.rc == 0
          - not result.is_available
          - not result.is_semp_available
          - not result.is_spool_available
    - assert:
        that: result.rc == 0 and "ConnectionPool(host='unknown.host.com'" in result.msg|string

    - name: "Wrong SSL"
      solace_get_available:
        secure_connection: "{{ False if sempv2_is_secure_connection else True }}"
        wait_timeout_minutes: 1
      register: result
      ignore_errors: true
    - assert:
        that:
          - result.rc == 1
          - not result.is_available
          - not result.is_semp_available
          - not result.is_spool_available
    - assert:
        that: result.rc == 1 and 'SSLError' in result.msg|string
      when: sempv2_is_secure_connection == False
    - assert:
        that: result.rc == 1 and 'The plain HTTP request was sent to HTTPS port' in result.msg|string
      when: sempv2_is_secure_connection == True

    - name: "Wrong password"
      solace_get_available:
        password: "unknown_password"
        wait_timeout_minutes: 1
      register: result
      ignore_errors: true

    - debug:
        msg: "sempv2 version greater 2.19"
      when: sempv2_version|float > 2.19

    - debug:
        msg: "sempv2 version less or equal 2.19"
      when: sempv2_version|float <= 2.19

      # from SEMP version=2.21 returns rc=1 (response code=401), before rc=0 (response code=200)
    - assert:
        that:
          - result.rc == 0
          - not result.is_available
          - result.is_semp_available
          - not result.is_spool_available
      when: sempv2_version|float <= 2.19
    - assert:
        that:
          - result.rc == 1
          - not result.is_available
          - not result.is_semp_available
          - not result.is_spool_available
      when: sempv2_version|float > 2.19
    - assert:
        that: "'UNAUTHORIZED' in result.msg|string"

    - name: "Wrong username"
      solace_get_available:
        username: "unknown_username"
        wait_timeout_minutes: 1
      register: result
      ignore_errors: true
    - assert:
        that:
          - result.rc == 0
          - not result.is_available
          - result.is_semp_available
          - not result.is_spool_available
      when: sempv2_version|float <= 2.19
    - assert:
        that:
          - result.rc == 1
          - not result.is_available
          - not result.is_semp_available
          - not result.is_spool_available
      when: sempv2_version|float > 2.19
    - assert:
        that: "'UNAUTHORIZED' in result.msg|string"


###
# The End.
