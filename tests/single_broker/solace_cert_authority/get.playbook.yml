# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "get: solace_client_profiles"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace_cert_authority:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN | default(omit) }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace_get_cert_authorities:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
  pre_tasks:
  - include_vars:
      file: "get.vars.yml"
      name: target_list
  tasks:

    - name: "get: solace_cert_authority: delete"
      solace_cert_authority:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ target_list.cert_authority_names }}"

    - name: "get: solace_get_cert_authorities: start"
      solace_get_cert_authorities:
        query_params:
          where:
            - "certAuthorityName=={{ target_list.where_pattern }}"
          select:
            - "certAuthorityName"
      register: result
    - assert:
        that: result.result_list_count == 0

    - name: "get: solace_cert_authority: add"
      solace_cert_authority:
        name: "{{ item.name }}"
        state: present
      loop: "{{ target_list.cert_authority_names }}"

    - name: "get: config: solace_get_cert_authorities: list"
      solace_get_cert_authorities:
        query_params:
          where:
            - "certAuthorityName=={{ target_list.where_pattern }}"
          select:
            - "certAuthorityName"
      register: result
    - assert:
        that: result.result_list_count == 3

    - name: "get: monitor: solace_get_cert_authorities: list"
      solace_get_cert_authorities:
        api: monitor
        query_params:
          where:
            - "certAuthorityName=={{ target_list.where_pattern }}"
      register: result
    - assert:
        that: result.result_list_count == 3

    - name: "get: solace_cert_authority: delete"
      solace_cert_authority:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ target_list.cert_authority_names }}"

###
# The End.
