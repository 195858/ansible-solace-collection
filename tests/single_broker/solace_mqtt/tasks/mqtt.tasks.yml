# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

---

    - name: Create Mqtt Session
      solace_mqtt_session:
        name: "{{ mqtt_session_item.mqttSessionClientId }}"
        settings:
          enabled: false
          owner: "{{ mqtt_client_username }}"
        state: present

    - name: Update Mqtt Session 1
      # switch settings from vars
      solace_mqtt_session:
        mqtt_session_client_id: "{{ mqtt_session_item.mqttSessionClientId }}"
        settings: "{{ mqtt.settings._gt_eq_2_14 if ansible_facts.solace.about.api.sempVersion | float >= 2.14 else omit }}"
        state: present

    - name: Update Mqtt Session 2
      # skip task if version not correct
      solace_mqtt_session:
        mqtt_session_client_id: "{{ mqtt_session_item.mqttSessionClientId }}"
        settings:
          queueMaxMsgSize: 300000
          queueMaxBindCount: 30
        state: present
      when: ansible_facts['solace']['about']['api']['sempVersion'] | float >= 2.14

    - name: Add / Update all subscriptions
      solace_mqtt_session_subscription:
        client_id: "{{ mqtt_session_item.mqttSessionClientId }}"
        topic: "{{ item }}"
        settings:
          subscriptionQos: 1
        state: present
      loop: "{{ mqtt_session_item.subscriptions }}"

    - name: Get Config of all Subscriptions
      solace_get_mqtt_session_subscriptions:
        client_id: "{{ mqtt_session_item.mqttSessionClientId }}"
        query_params:
          where:
            - "subscriptionTopic==ansible-solace/test/*"
          select:
            - "mqttSessionClientId"
            - "mqttSessionVirtualRouter"
            - "subscriptionTopic"
            - "subscriptionQos"
      register: get_subscription_result

    - name: Fail when new subscription list count != 3
      fail:
        msg: "new mqtt session subscription count != 3"
      when: get_subscription_result.result_list_count != 3

    - name: Get Monitor of all Subscriptions
      solace_get_mqtt_session_subscriptions:
        client_id: "{{ mqtt_session_item.mqttSessionClientId }}"
        api: monitor
        query_params:
          where:
            - "subscriptionTopic==ansible-solace/test/*"
          select:
      register: get_subscription_monitor_result

    - name: Print Monitor Result of MQTT Session Subscriptions
      debug:
        msg: "{{ get_subscription_monitor_result.result_list }}"

    - name: Enable Mqtt Session
      solace_mqtt_session:
        name: "{{ mqtt_session_item.mqttSessionClientId }}"
        settings:
          enabled: true
        state: present

    - name: Delete all subscriptions
      solace_mqtt_session_subscription:
        client_id: "{{ mqtt_session_item.mqttSessionClientId }}"
        topic: "{{ item }}"
        state: absent
      loop: "{{ mqtt_session_item.subscriptions }}"


###
# The End.
