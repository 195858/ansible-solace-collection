# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "main"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  pre_tasks:
  - include_vars:
      file: "solace-cloud-service.vars.yml"
      name: sc_service
  tasks:
    - name: "main: check vars"
      set_fact:
        working_dir: "{{ WORKING_DIR }}"
        sc_service_inventory_file_name_ext: "{{ SOLACE_CLOUD_SERVICE_INVENTORY_FILE_NAME_EXT }}"
        sc_service_name: "{{ inventory_hostname }}"
        sc_service_settings: "{{ sc_service.settings }}"
        sc_api_token: "{{ SOLACE_CLOUD_API_TOKEN }}"
    - set_fact:
        sc_service_inventory_file: "{{ working_dir }}/{{ sc_service_name }}.{{ sc_service_inventory_file_name_ext }}"

    - name: "main: ensure {{ working_dir }} exists"
      file:
        path: "{{ working_dir }}"
        state: directory
      delegate_to: localhost

    - name: "main: solace_cloud_service: create {{ sc_service_name }}"
      solace_cloud_service:
        api_token: "{{ sc_api_token }}"
        name: "{{ sc_service_name }}"
        wait_timeout_minutes: 30
        settings: "{{ sc_service_settings }}"
        state: present
      register: result

    - set_fact:
        sc_service_id: "{{ result.response.serviceId }}"
        sc_service_info: "{{ result.response }}"

    - name: "main: Save Solace Cloud Service Details to File for {{ sc_service_name }}"
      copy:
        content: "{{ sc_service_info | to_nice_json }}"
        dest: "{{ working_dir }}/{{ sc_service_name }}.info.json"
      delegate_to: localhost

    - name: "main: solace_cloud_get_facts: get inventory for {{ sc_service_name }}"
      solace_cloud_get_facts:
        from_dict: "{{ sc_service_info }}"
        get_formattedHostInventory:
          host_entry: "{{ sc_service_name }}"
          api_token: "{{ sc_api_token }}"
          meta:
            service_name: "{{ sc_service_info.name }}"
            sc_service_id: "{{ sc_service_info.serviceId }}"
            datacenterId: "{{ sc_service_info.datacenterId }}"
            serviceTypeId: "{{ sc_service_info.serviceTypeId}}"
            serviceClassId: "{{ sc_service_info.serviceClassId }}"
            serviceClassDisplayedAttributes: "{{ sc_service_info.serviceClassDisplayedAttributes }}"
      register: result

    - name: "main: Save Solace Cloud Service Inventory to File for {{ sc_service_name }}"
      copy:
        content: "{{ result.facts.formattedHostInventory | to_nice_yaml }}"
        dest: "{{ sc_service_inventory_file }}"
      changed_when: false
      delegate_to: localhost

###
# The End.
