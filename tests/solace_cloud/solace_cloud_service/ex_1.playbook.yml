#!/usr/bin/env bash
# (c) 2020 Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "ex_1: solace_cloud_service"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  tasks:
    - name: "Check vars"
      set_fact:
        working_dir: "{{ WORKING_DIR }}"
        api_token: "{{ SOLACE_CLOUD_API_TOKEN }}"
        api_token_restriced: "{{ SOLACE_CLOUD_API_TOKEN_RESTRICTED }}"
        sc_account_name: "{{ inventory_hostname }}"

    - name: "ex_1: no name, state=present"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        settings:
          msgVpnName: "not-created-vpn"
          datacenterId: "aws-ca-central-1a"
          serviceTypeId: "enterprise"
          serviceClassId: "enterprise-giga"
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'arg \'name=None\'' in result.msg[1]

    - name: "ex_1: no name, state=absent"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        state: absent
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'at least one is required for state=\'absent\'' in result.msg[1]

    - name: "ex_1: non-existent service_id, state=absent"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        service_id: xxxxx
        state: absent
      register: result
    - assert:
        that: result.changed == False

    - name: "ex_1: Plan not available"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        name: this-service-should-never-be-created
        settings:
          msgVpnName: "not-created-vpn"
          datacenterId: "aws-ca-central-1a"
          serviceTypeId: "enterprise"
          serviceClassId: "enterprise-giga"
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'Limit Exceeded' in result.msg.body.message

    - name: "ex_1: Token has wrong permissions"
      solace_cloud_service:
        api_token: "{{ api_token_restriced }}"
        name: never-created-service
        settings:
          msgVpnName: "not-created-vpn"
          datacenterId: "aws-ca-central-1a"
          serviceTypeId: "enterprise"
          serviceClassId: "enterprise-250-nano"
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'Subject does not have permission' in result.msg.body.message

    - name: "ex_1: not a token"
      solace_cloud_service:
        api_token: "xxxx-yyyy"
        name: never-created-service
        settings:
          msgVpnName: "not-created-vpn"
          datacenterId: "aws-ca-central-1a"
          serviceTypeId: "enterprise"
          serviceClassId: "enterprise-250-nano"
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'Your permissions have changed' in result.msg.body.message

    - name: "ex_1: missing settings"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        name: this-service-should-never-be-created
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'arg \'settings=None\'' in result.msg[1]

    - name: "ex_1: empty settings"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        name: this-service-should-never-be-created
        settings:
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'arg \'settings=None\'' in result.msg[1]

    - name: "ex_1: insufficient settings"
      solace_cloud_service:
        api_token: "{{ api_token }}"
        name: this-service-should-never-be-created
        settings:
          msgVpnName: "not-created-vpn"
        state: present
      register: result
      ignore_errors: yes
    - assert:
        that: result.rc == 1 and 'must not be blank' in result.msg | string

        # API does not catch this
    # - name: "ex_1: unknown settings"
    #   solace_cloud_service:
    #     api_token: "{{ api_token }}"
    #     name: this-service-should-never-be-created
    #     settings:
    #       unknown_setting: xxx
    #       datacenterId: "aws-ca-central-1a"
    #       serviceTypeId: "enterprise"
    #       serviceClassId: "enterprise-250-nano"
    #     state: present
    #   ignore_errors: yes
    # - assert:
    #     that: result.rc == 1 and 'must not be blank' in result.msg | string

###
# The End.
