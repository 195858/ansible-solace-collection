:github_url: https://github.com/sensu/sensu-go-ansible/blob/master/plugins/modules/solace_cloud_service.py

.. _solace_cloud_service_module:

solace_cloud_service -- Create & delete Solace Cloud services.
==============================================================

Create & delete Solace Cloud services. Note that you can't change a service once it has been created. Only option: delete & re-create.





Examples
--------

.. code-block:: yaml+jinja

   

   - name: "Create Solace Cloud Service"
     solace_cloud_service:
       api_token: "{{ api_token_all_permissions }}"
       name: "{{ sc_service.name }}"
       settings:
         msgVpnName: "{{ sc_service.msgVpnName}}"
         datacenterId: "{{ sc_service.datacenterId }}"
         serviceTypeId: "{{ sc_service.serviceTypeId}}"
         serviceClassId: "{{ sc_service.serviceClassId }}"
       state: present

   - set_fact:
       sc_service_created_interim_info: "{{ result.response }}"
       sc_service_created_id: "{{ result.response.serviceId }}"

   - name: "Print Solace Cloud Service: service id"
     debug:
       msg: "service_id = {{ sc_service_created_id }}"

   - name: "Wait for Service Provisioning to Complete"
     solace_cloud_get_service:
       api_token: "{{ api_token_all_permissions }}"
       service_id: "{{ sc_service_created_id }}"
     register: get_service_result
     until: "get_service_result.rc != 0 or get_service_result.response.creationState == 'completed'"
     # wait max for 40 * 30 seconds, then give up
     retries: 40
     delay: 30 # Every 30 seconds

   - set_fact:
       sc_service_created_info: "{{ result.response }}"

   - name: "Save New Solace Cloud Service Facts to File"
     local_action:
       module: copy
       content: "{{ sc_service_created_info | to_nice_json }}"
       dest: "./tmp/facts.solace_cloud_service.{{ sc_service.name }}.json"




Notes
-----

.. note::
   The Solace Cloud API does not support updates to a service. Hence, changes are not supported here.

   Creating a service in Solace Cloud is a long-running process. See examples for checking until completed.

   Reference: https://docs.solace.com/Solace-Cloud/ght_use_rest_api_services.htm.






Parameters
----------

api_token (required)
  The API Token.

  | **type**: str
  | **default**: None

name (optional)
  The name of the service to manage. Mandatory for state='present'.

  | **type**: str

service_id (optional)
  The service-id of the service to manage. Allowed option for state='absent'.

  | **type**: str

settings (optional)
  Additional settings for state=present. See Reference documentation output of :ref:`solace_cloud_get_service <solace_cloud_get_service_module>` for details.

  | **type**: dict

state (optional)
  Target state.

  | **type**: str
  | **default**: present
  | **choices**: present, absent

timeout (optional)
  Connection timeout in seconds for the http/s request.

  | **type**: int
  | **default**: 60





Return Values
-------------

rc
  return code, either 0 (ok), 1 (not ok)

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     "{}"

msg
  error message if not ok

  | **returned**: always
  | **type**: str
  | **sample**:

  .. code-block:: json

     "{}"

response
  the response from the create call.

  | **returned**: always
  | **type**: complex
  | **sample**:

  .. code-block:: json

     "{}"


