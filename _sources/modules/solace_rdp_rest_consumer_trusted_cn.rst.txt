:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_rdp_rest_consumer_trusted_cn.py

.. _solace_rdp_rest_consumer_trusted_cn_module:

solace_rdp_rest_consumer_trusted_cn -- trusted common name for rest consumer
============================================================================

Allows addition, removal and configuration of trusted common name objects for a rest consumer of an RDP.

Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/restDeliveryPoint/getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames.




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   gather_facts: no
   any_errors_fatal: true
   collections:
   - solace.pubsub_plus
   module_defaults:
     solace_rdp:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
     solace_rdp_rest_consumer:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
     solace_rdp_rest_consumer_trusted_cn:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
   tasks:
     - name: Create RDP
       solace_rdp:
         name: "rdp"
         state: present

     - name: Create RDP RestConsumer
       solace_rdp_restConsumer:
         name: "rest-consumer"
         rdp_name: "rdp"
         settings:
           remoteHost: "{{ host }}"
           remotePort: "{{ port }}"
         state: present

     - name: Add the TLS Trusted Common Name
       solace_rdp_restConsumer_trusted_cn:
         rdp_name: "rdp"
         rest_consumer_name: "rest-consumer"
         name: "cn"
         state: present



Notes
-----

.. note::
   Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/.



See Also
--------

.. seealso::

   - :ref:`solace_rdp_rest_consumer_module`



Parameters
----------

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

msg_vpn (required)
  The message vpn.

  | **type**: str

name (required)
  The expected trusted common name of the remote certificate. Maps to 'tlsTrustedCommonName' in the API.

  | **type**: str

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

rdp_name (required)
  The RDP name. Maps to 'restDeliveryPointName' in the API.

  | **type**: str

rest_consumer_name (required)
  The Rest consumer name. Maps to 'restConsumerName' in the API.

  | **type**: str

secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool

settings (optional)
  JSON dictionary of additional configuration, see Reference documentation.

  | **type**: dict

state (optional)
  Target state.

  | **type**: str
  | **default**: present
  | **choices**: present, absent

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

response
  The response from the Solace Sempv2 request.

  | **returned**: success
  | **type**: dict
  | **sample**:

  .. code-block:: json

     "{}"


