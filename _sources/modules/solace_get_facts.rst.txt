:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_get_facts.py

.. _solace_get_facts_module:

solace_get_facts -- get facts from ansible_facts.solace
=======================================================

Provides convenience functions to access solace facts retrieved from broker service using :ref:`solace_gather_facts <solace_gather_facts_module>` from 'ansible_facts.solace'.




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   gather_facts: no
   any_errors_fatal: true
   collections:
   - solace.pubsub_plus
   module_defaults:
     solace_gather_facts:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       solace_cloud_api_token: "{{ solace_cloud_api_token | default(omit) }}"
       solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"

   tasks:
   - name: Gather Solace Facts
     solace_gather_facts:

   - name: "Get Host SMF Messaging Endpoints Facts: solace-cloud-1"
     solace_get_facts:
       hostvars: "{{ hostvars }}"
       # solace-cloud-1 is a host in the inventory
       host: solace-cloud-1
       field_funcs:
       - get_serviceSMFMessagingEndpoints
       - get_serviceSmfPlainTextListenPort
       - get_serviceSmfCompressionListenPort
       - get_serviceSmfTlsListenPort
       - get_virtualRouterName
     register: results

   - name: print results
     debug:
       msg:
       - "{{ results.facts }}"



Notes
-----

.. note::
   - In order to access other hosts' facts (other than the current 'inventory_host'), you must not use the 'serial' strategy for the playbook.


See Also
--------

.. seealso::

   - :ref:`solace_gather_facts_module`



Parameters
----------

field_funcs (optional)
  List of pre-built field functions that retrieve values from hostvars.

  | **type**: list
  | **default**: []

  get_allClientConnectionDetails (optional)
    Retrieve all enabled client connection details for the various protocols for the service/broker.

    | **type**: str

  get_bridge_remoteMsgVpnLocations (optional)
    Retrieve enabled remote message vpn locations (plain, secured, compressed) for the service/broker.

    For Solace Cloud: {hostname}:{port}.

    For broker: v:{virtualRouterName}.

    | **type**: str

  get_dmrClusterConnectionDetails (optional)
    Retrieve all DMR cluster connection details for the service/broker.

    | **type**: str

  get_serviceSmfCompressionListenPort (optional)
    Retrieve the smf compressed listen port

    | **type**: str

  get_serviceSMFMessagingEndpoints (optional)
    Retrieve the all smf messaging endpoints

    | **type**: str

  get_serviceSmfPlainTextListenPort (optional)
    Retrieve the smf plain listen port

    | **type**: str

  get_serviceSmfTlsListenPort (optional)
    Retrieve the smf tls listen port

    | **type**: str

  get_virtualRouterName (optional)
    Retrieve the virtual router name

    | **type**: str


host (required)
  The playbook host to retrieve the facts from.

  | **type**: str

hostvars (required)
  The playbook's 'hostvars'.

  | **type**: dict

msg_vpn (optional)
  The message vpn.

  | **type**: str





Return Values
-------------

facts
  The facts requested.

  | **returned**: success
  | **type**: dict
  | **sample**:

  .. code-block:: json

     {
     "facts": {
       "serviceSmfCompressionListenPort": 55003,
       "serviceSmfPlainTextListenPort": 55555,
       "serviceSmfTlsListenPort": 55443,
       "virtualRouterName": "single-aws-eu-west-6e-4ftdf"
     }
   }

msg
  The response from the HTTP call in case of error.

  | **returned**: error
  | **type**: dict

rc
  Return code. rc=0 on success, rc=1 on error.

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     {
     "error": {
       "rc": 1
     },
     "success": {
       "rc": 0
     }
   }


