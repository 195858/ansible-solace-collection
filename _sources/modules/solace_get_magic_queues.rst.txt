:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_get_magic_queues.py

.. _solace_get_magic_queues_module:

solace_get_magic_queues -- get 'magic' queues
=============================================

Get a list of 'magic' Queue Objects that are generated by the Broker, e.g. #mqtt, #rdp, ...




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   gather_facts: no
   any_errors_fatal: true
   collections:
   - solace.pubsub_plus
   module_defaults:
     solace_mqtt_session:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
     solace_get_magic_queues:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
   tasks:
   - name: create mqtt session
     solace_mqtt_session:
       name: foo
       state: present

   - name: get magic queue
     solace_get_magic_queues:
       where_name: "#mqtt/*"
     register: result

   - name: print result
     debug:
       msg:
       - "{{ result.result_list }}"
       - "{{ result.result_list_count }}"



Notes
-----

.. note::
   - Module Sempv1: https://docs.solace.com/Configuring-and-Managing/Monitoring-Guaranteed-Messaging.htm#Viewing - show queue
   - Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/
   - Sempv2 Monitor Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/
   - Sempv2 Action Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/action/index.html#/


See Also
--------

.. seealso::

   - :ref:`solace_mqtt_session_module`
   - :ref:`solace_rdp_queue_binding_module`



Parameters
----------

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

msg_vpn (required)
  The message vpn.

  | **type**: str

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool
  | **default**: False

sempv2_version (optional)
  The SEMP V2 API version of the broker. See :ref:`solace_get_facts <solace_get_facts_module>` for info on how to retrieve the version from the broker.

  Note: If the module requires it and not provided, the module will fetch it using the SEMP call 'about/api'.

  | **type**: str
  | **aliases**: semp_version

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

where_name (required)
  Query for queue name. Maps to <name> in the API.

  Examples: ``#mqtt/*``, ``#rdp/*`` 

  | **type**: str

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

result_list
  The list of objects found containing requested fields. Payload depends on API called.

  | **returned**: success
  | **type**: list
  | **sample**:

  .. code-block:: json

     [
     {
       "info": {
         "access-type": "exclusive",
         "bind-count": "0",
         "current-spool-usage-in-mb": "0",
         "durable": "true",
         "egress-config-status": "Down",
         "egress-selector-present": "No",
         "high-water-mark-in-mb": "0",
         "ingress-config-status": "Down",
         "message-vpn": "default",
         "num-messages-spooled": "0",
         "topic-subscription-count": "3",
         "type": "Primary"
       },
       "name": "#mqtt/foo/180"
     }
   ]

result_list_count
  Number of items in result_list.

  | **returned**: success
  | **type**: int

rc
  Return code. rc=0 on success, rc=1 on error.

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     {
     "error": {
       "rc": 1
     },
     "success": {
       "rc": 0
     }
   }

msg
  The response from the HTTP call in case of error.

  | **returned**: error
  | **type**: dict


