:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_get_magic_queues.py

.. _solace_get_magic_queues_module:

solace_get_magic_queues -- get 'magic' queues
=============================================

Get a list of 'magic' Queue Objects that are generated by the Broker, e.g. #mqtt, #rdp, ...




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   gather_facts: no
   any_errors_fatal: true
   collections:
   - solace.pubsub_plus
   module_defaults:
     solace_mqtt_session:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
     solace_get_magic_queues:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
   tasks:
     - name: create mqtt session
       solace_mqtt_session:
           name: foo
           state: present

     - name: "Get MQTT Magic Queues"
       solace_get_magic_queues:
           where_name: "#mqtt/*"
       register: result

     - set_fact:
           magic_queues: "{{ result.result_list }}"

     - name: "Check: All magic Queues are ON/ON"
       fail:
           msg: "Magic queue: ingress or egress is 'Down' for magic_queue: {{ magic_queue.name }} "
       when: magic_queue.info['ingress-config-status'] == "Down" or magic_queue.info['egress-config-status'] == "Down"
       loop: "{{ magic_queues }}"
       loop_control:
           loop_var: magic_queue




Notes
-----

.. note::
   Uses SEMP v1.

   Reference: https://docs.solace.com/Configuring-and-Managing/Monitoring-Guaranteed-Messaging.htm#Viewing.

   Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/.






Parameters
----------

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

msg_vpn (required)
  The message vpn.

  | **type**: str

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

where_name (required)
  Query for queue name. Maps to <name> in the API.

  Examples: #mqtt/*, #rdp/* 

  | **type**: str

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

rc
  return code. on success: rc=0, on failure: rc=1

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     "{}"

result_list
  The list of objects found containing requested fields.

  | **returned**: success
  | **type**: list
  | **sample**:

  .. code-block:: json

     [
     {
       "info": {
         "access-type": "exclusive",
         "bind-count": "0",
         "current-spool-usage-in-mb": "0",
         "durable": "true",
         "egress-config-status": "Down",
         "egress-selector-present": "No",
         "high-water-mark-in-mb": "0",
         "ingress-config-status": "Down",
         "message-vpn": "default",
         "num-messages-spooled": "0",
         "topic-subscription-count": "3",
         "type": "Primary"
       },
       "name": "#mqtt/ansible_solace_test_mqtt__1__/180"
     }
   ]

result_list_count
  Number of items in result_list.

  | **returned**: success
  | **type**: int
  | **sample**:

  .. code-block:: json

     "{}"


