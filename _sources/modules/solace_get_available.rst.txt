:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_get_available.py

.. _solace_get_available_module:

solace_get_available -- check if broker semp & spool is available
=================================================================

Check if broker service is reachable via SEMP and if the spool is ready. Calls "GET /about/api" and creates/deletes a test queue.




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   any_errors_fatal: true
   module_defaults:
     solace_get_available:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       msg_vpn: "{{ vpn }}"
   tasks:
     - name: "Wait until broker service available"
       solace.pubsub_plus.solace_get_available:
       register: available_result

     - name: "Check if available"
       debug:
           msg:
           - "service not available"
       when: not available_result.is_available
       failed_when: true



Notes
-----

.. note::
   - Module Sempv2 Config: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/about/getAbout
   - Module Sempv2 Config: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/queue/createMsgVpnQueue
   - Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/
   - Sempv2 Monitor Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/
   - Sempv2 Action Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/action/index.html#/





Parameters
----------

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

msg_vpn (required)
  The message vpn.

  | **type**: str

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool
  | **default**: False

sempv2_version (optional)
  The SEMP V2 API version of the broker. See :ref:`solace_get_facts <solace_get_facts_module>` for info on how to retrieve the version from the broker.

  Note: If the module requires it and not provided, the module will fetch it using the SEMP call 'about/api'.

  | **type**: str
  | **aliases**: semp_version

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

wait_timeout_minutes (optional)
  Minutes to run tests for SEMP and spool. Polls every 15 seconds for `wait_timeout_minutes` until service is available.

  | **type**: int
  | **default**: 10

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

is_available
  Flag indicating whether broker service is available.

  | **returned**: always
  | **type**: bool

is_semp_available
  Flag indicating whether broker service SEMP is available.

  | **returned**: always
  | **type**: bool

is_spool_available
  Flag indicating whether broker service spool is available.

  | **returned**: always
  | **type**: bool

msg
  Details in case of an error.

  | **returned**: error
  | **type**: dict

rc
  Return code. rc=0 on success, rc=1 on error.

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     {
     "error": {
       "rc": 1
     },
     "success": {
       "rc": 0
     }
   }


