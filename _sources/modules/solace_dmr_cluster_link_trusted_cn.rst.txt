:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_dmr_cluster_link_trusted_cn.py

.. _solace_dmr_cluster_link_trusted_cn_module:

solace_dmr_cluster_link_trusted_cn -- trusted common name for dmr cluster link
==============================================================================

Allows addition, removal and configuration of Trusted Common Name Objects on DMR Cluster links.




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   gather_facts: no
   any_errors_fatal: true
   collections:
   - solace.pubsub_plus
   module_defaults:
     solace_dmr_cluster_link_trusted_cn:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
   tasks:
     - name: remove
       solace_dmr_cluster_link_trusted_cn:
         name: "*.messaging.solace.cloud"
         remote_node_name: remoteNode
         dmr_cluster_name: foo
         state: absent

     - name: add
       solace_dmr_cluster_link_trusted_cn:
         name: "*.messaging.solace.cloud"
         remote_node_name: remoteNode
         dmr_cluster_name: foo
         state: present



Notes
-----

.. note::
   - Module Sempv2 Config: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/dmrCluster/createDmrClusterLinkTlsTrustedCommonName
   - Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/
   - Sempv2 Monitor Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/
   - Sempv2 Action Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/action/index.html#/


See Also
--------

.. seealso::

   - :ref:`solace_dmr_cluster_module`
   - :ref:`solace_dmr_cluster_link_module`
   - :ref:`solace_get_dmr_cluster_link_trusted_cns_module`



Parameters
----------

dmr_cluster_name (required)
  The name of the DMR cluster. Maps to 'dmrClusterName' in the API.

  | **type**: str

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

name (required)
  The expected trusted common name of the remote certificate. Maps to 'tlsTrustedCommonName' in the API.

  | **type**: str
  | **aliases**: tls_trusted_common_name

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

remote_node_name (required)
  The name of the remote node. Maps to 'remoteNodeName' in the API.

  | **type**: str

secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool
  | **default**: False

sempv2_version (optional)
  The SEMP V2 API version of the broker. See :ref:`solace_get_facts <solace_get_facts_module>` for info on how to retrieve the version from the broker.

  Note: If the module requires it and not provided, the module will fetch it using the SEMP call 'about/api'.

  | **type**: str
  | **aliases**: semp_version

settings (optional)
  JSON dictionary of additional configuration, see Reference documentation.

  | **type**: dict

state (optional)
  Target state.

  | **type**: str
  | **default**: present
  | **choices**: present, absent

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

response
  The response from the Solace Sempv2 request.

  | **returned**: success
  | **type**: dict

msg
  The response from the HTTP call in case of error.

  | **returned**: error
  | **type**: dict

rc
  Return code. rc=0 on success, rc=1 on error.

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     {
     "error": {
       "rc": 1
     },
     "success": {
       "rc": 0
     }
   }


